/*
 * The MIT License
 *
 * Copyright 2017 Olivier.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package UIKit;

/**
 *
 * @author Olivier
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        keyTypeButtonGroup = new javax.swing.ButtonGroup();
        alterationButtonGroup = new javax.swing.ButtonGroup();
        splitWindow = new javax.swing.JSplitPane();
        instrumentPanel = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(250, 0), new java.awt.Dimension(600, 0), new java.awt.Dimension(250, 32767));
        jScrollPane1 = new javax.swing.JScrollPane();
        keyProperties = new javax.swing.JPanel();
        generalProperties = new javax.swing.JPanel();
        nameProperty = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        volumeProperty = new javax.swing.JPanel();
        volumeLabel = new javax.swing.JLabel();
        volumeSpinner = new javax.swing.JSpinner();
        envelopeProperties = new javax.swing.JPanel();
        envelopeTitlePanel = new javax.swing.JPanel();
        envelopeLabel = new javax.swing.JLabel();
        envelopeGraph = new javax.swing.JPanel();
        envelopeSliders = new javax.swing.JPanel();
        attackSliderPanel = new javax.swing.JPanel();
        attackSlider = new javax.swing.JSlider();
        attackLabel = new javax.swing.JLabel();
        decaySliderPanel = new javax.swing.JPanel();
        decaySlider = new javax.swing.JSlider();
        decayLabel = new javax.swing.JLabel();
        sustainSliderPanel = new javax.swing.JPanel();
        sustainLabel = new javax.swing.JLabel();
        sustainSlider = new javax.swing.JSlider();
        releaseSliderPanel = new javax.swing.JPanel();
        releaseLabel = new javax.swing.JLabel();
        releaseSlider = new javax.swing.JSlider();
        typeProperty = new javax.swing.JPanel();
        synthRadioButton = new javax.swing.JRadioButton();
        audioClipRadioButton = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        noteProperties = new javax.swing.JPanel();
        frequencyProperty = new javax.swing.JPanel();
        frequencyLabel = new javax.swing.JLabel();
        frequencySpinner = new javax.swing.JSpinner();
        tuningProperty = new javax.swing.JPanel();
        tuningLabel = new javax.swing.JLabel();
        tuningSpinner = new javax.swing.JSpinner();
        noteNameProperty = new javax.swing.JPanel();
        noteNameLabel = new javax.swing.JLabel();
        noteNameChoice = new java.awt.Choice();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(80, 0), new java.awt.Dimension(200, 32767));
        octaveLabel = new javax.swing.JLabel();
        octaveSpinner = new javax.swing.JSpinner();
        alterationProperty = new javax.swing.JPanel();
        alterationLabel = new javax.swing.JLabel();
        sharpRadioButton = new javax.swing.JRadioButton();
        naturalRadioButton = new javax.swing.JRadioButton();
        flatRadioButton = new javax.swing.JRadioButton();
        waveFormProperty = new javax.swing.JPanel();
        waveFormLabel = new javax.swing.JLabel();
        waveFormChoice = new java.awt.Choice();
        jSeparator2 = new javax.swing.JSeparator();
        audioClipProperties = new javax.swing.JPanel();
        audioClipFileProperty = new javax.swing.JPanel();
        audioClipFileLabel = new javax.swing.JLabel();
        audioClipPathLabel = new javax.swing.JLabel();
        audioClipSelectButton = new java.awt.Button();
        readSpeedProperty = new javax.swing.JPanel();
        readSpeedLabel = new javax.swing.JLabel();
        readSpeedSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 500));

        splitWindow.setDividerLocation(250);
        splitWindow.setContinuousLayout(true);
        splitWindow.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        instrumentPanel.setBackground(new java.awt.Color(255, 255, 255));
        instrumentPanel.setLayout(new java.awt.BorderLayout());
        instrumentPanel.add(filler2, java.awt.BorderLayout.CENTER);

        splitWindow.setLeftComponent(instrumentPanel);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(350, 250));

        keyProperties.setLayout(new javax.swing.BoxLayout(keyProperties, javax.swing.BoxLayout.Y_AXIS));

        generalProperties.setBackground(new java.awt.Color(153, 153, 153));
        generalProperties.setLayout(new javax.swing.BoxLayout(generalProperties, javax.swing.BoxLayout.Y_AXIS));

        nameProperty.setLayout(new java.awt.GridLayout());

        nameLabel.setText("Nom :");
        nameProperty.add(nameLabel);

        nameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameField.setText("Nom de note");
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        nameProperty.add(nameField);

        generalProperties.add(nameProperty);

        volumeProperty.setLayout(new java.awt.GridLayout(1, 0));

        volumeLabel.setText("Volume :");
        volumeProperty.add(volumeLabel);

        volumeSpinner.setModel(new javax.swing.SpinnerNumberModel(100.0d, 0.0d, 100.0d, 1.0d));
        volumeProperty.add(volumeSpinner);

        generalProperties.add(volumeProperty);

        envelopeProperties.setLayout(new javax.swing.BoxLayout(envelopeProperties, javax.swing.BoxLayout.Y_AXIS));

        envelopeTitlePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        envelopeLabel.setText("Enveloppe :");
        envelopeLabel.setToolTipText("");
        envelopeTitlePanel.add(envelopeLabel);

        envelopeProperties.add(envelopeTitlePanel);

        envelopeGraph.setBackground(new java.awt.Color(255, 255, 255));
        envelopeGraph.setMinimumSize(new java.awt.Dimension(50, 100));
        envelopeGraph.setPreferredSize(new java.awt.Dimension(50, 125));

        javax.swing.GroupLayout envelopeGraphLayout = new javax.swing.GroupLayout(envelopeGraph);
        envelopeGraph.setLayout(envelopeGraphLayout);
        envelopeGraphLayout.setHorizontalGroup(
            envelopeGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 708, Short.MAX_VALUE)
        );
        envelopeGraphLayout.setVerticalGroup(
            envelopeGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 132, Short.MAX_VALUE)
        );

        envelopeProperties.add(envelopeGraph);

        attackSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        attackSlider.setToolTipText("Attack");
        attackSlider.setValue(15);
        attackSlider.setMaximumSize(new java.awt.Dimension(50, 32767));
        attackSlider.setMinimumSize(new java.awt.Dimension(50, 36));
        attackSlider.setPreferredSize(new java.awt.Dimension(50, 200));

        attackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        attackLabel.setLabelFor(attackSlider);
        attackLabel.setText("Attack");
        attackLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        attackLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout attackSliderPanelLayout = new javax.swing.GroupLayout(attackSliderPanel);
        attackSliderPanel.setLayout(attackSliderPanelLayout);
        attackSliderPanelLayout.setHorizontalGroup(
            attackSliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(attackSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(attackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        attackSliderPanelLayout.setVerticalGroup(
            attackSliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attackSliderPanelLayout.createSequentialGroup()
                .addComponent(attackSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attackLabel)
                .addGap(1, 1, 1))
        );

        envelopeSliders.add(attackSliderPanel);

        decaySlider.setOrientation(javax.swing.JSlider.VERTICAL);
        decaySlider.setToolTipText("Decay");
        decaySlider.setMaximumSize(new java.awt.Dimension(50, 32767));
        decaySlider.setMinimumSize(new java.awt.Dimension(50, 36));
        decaySlider.setPreferredSize(new java.awt.Dimension(50, 200));

        decayLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        decayLabel.setText("Decay");
        decayLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout decaySliderPanelLayout = new javax.swing.GroupLayout(decaySliderPanel);
        decaySliderPanel.setLayout(decaySliderPanelLayout);
        decaySliderPanelLayout.setHorizontalGroup(
            decaySliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decaySliderPanelLayout.createSequentialGroup()
                .addGroup(decaySliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(decaySlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(decayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        decaySliderPanelLayout.setVerticalGroup(
            decaySliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decaySliderPanelLayout.createSequentialGroup()
                .addComponent(decaySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(decayLabel)
                .addGap(2, 2, 2))
        );

        envelopeSliders.add(decaySliderPanel);

        sustainLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sustainLabel.setText("Sustain");
        sustainLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        sustainSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        sustainSlider.setToolTipText("Sustain");
        sustainSlider.setValue(75);
        sustainSlider.setMaximumSize(new java.awt.Dimension(50, 32767));
        sustainSlider.setMinimumSize(new java.awt.Dimension(50, 36));
        sustainSlider.setPreferredSize(new java.awt.Dimension(50, 200));

        javax.swing.GroupLayout sustainSliderPanelLayout = new javax.swing.GroupLayout(sustainSliderPanel);
        sustainSliderPanel.setLayout(sustainSliderPanelLayout);
        sustainSliderPanelLayout.setHorizontalGroup(
            sustainSliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sustainSliderPanelLayout.createSequentialGroup()
                .addGroup(sustainSliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sustainSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sustainLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        sustainSliderPanelLayout.setVerticalGroup(
            sustainSliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sustainSliderPanelLayout.createSequentialGroup()
                .addComponent(sustainSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sustainLabel)
                .addGap(0, 0, 0))
        );

        envelopeSliders.add(sustainSliderPanel);

        releaseLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        releaseLabel.setText("Release");
        releaseLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        releaseSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        releaseSlider.setToolTipText("Release");
        releaseSlider.setValue(10);
        releaseSlider.setMaximumSize(new java.awt.Dimension(50, 32767));
        releaseSlider.setMinimumSize(new java.awt.Dimension(50, 36));
        releaseSlider.setPreferredSize(new java.awt.Dimension(50, 200));

        javax.swing.GroupLayout releaseSliderPanelLayout = new javax.swing.GroupLayout(releaseSliderPanel);
        releaseSliderPanel.setLayout(releaseSliderPanelLayout);
        releaseSliderPanelLayout.setHorizontalGroup(
            releaseSliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(releaseSliderPanelLayout.createSequentialGroup()
                .addGroup(releaseSliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(releaseSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(releaseLabel))
                .addGap(0, 0, 0))
        );
        releaseSliderPanelLayout.setVerticalGroup(
            releaseSliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(releaseSliderPanelLayout.createSequentialGroup()
                .addComponent(releaseSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(releaseLabel)
                .addGap(0, 0, 0))
        );

        envelopeSliders.add(releaseSliderPanel);

        envelopeProperties.add(envelopeSliders);

        generalProperties.add(envelopeProperties);

        typeProperty.setLayout(new java.awt.GridLayout());

        keyTypeButtonGroup.add(synthRadioButton);
        synthRadioButton.setSelected(true);
        synthRadioButton.setText("Synth");
        typeProperty.add(synthRadioButton);

        keyTypeButtonGroup.add(audioClipRadioButton);
        audioClipRadioButton.setText("Clip Audio");
        audioClipRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                audioClipRadioButtonActionPerformed(evt);
            }
        });
        typeProperty.add(audioClipRadioButton);

        generalProperties.add(typeProperty);

        keyProperties.add(generalProperties);

        jSeparator1.setMinimumSize(new java.awt.Dimension(0, 5));
        keyProperties.add(jSeparator1);

        noteProperties.setBackground(new java.awt.Color(204, 204, 204));
        noteProperties.setLayout(new javax.swing.BoxLayout(noteProperties, javax.swing.BoxLayout.Y_AXIS));

        frequencyProperty.setLayout(new java.awt.GridLayout(1, 2));

        frequencyLabel.setText("Fréquence :");
        frequencyProperty.add(frequencyLabel);

        frequencySpinner.setModel(new javax.swing.SpinnerNumberModel(440.0d, 10.0d, 18000.0d, 0.1d));
        frequencyProperty.add(frequencySpinner);

        noteProperties.add(frequencyProperty);

        tuningProperty.setLayout(new java.awt.GridLayout(1, 2));

        tuningLabel.setText("Tuning : ");
        tuningProperty.add(tuningLabel);

        tuningSpinner.setModel(new javax.swing.SpinnerNumberModel(0, -49, 49, 1));
        tuningProperty.add(tuningSpinner);

        noteProperties.add(tuningProperty);

        noteNameProperty.setLayout(new javax.swing.BoxLayout(noteNameProperty, javax.swing.BoxLayout.LINE_AXIS));

        noteNameLabel.setText("Nom de note :");
        noteNameProperty.add(noteNameLabel);
        noteNameProperty.add(noteNameChoice);
        noteNameProperty.add(filler1);

        octaveLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        octaveLabel.setText("Octave :");
        noteNameProperty.add(octaveLabel);

        octaveSpinner.setModel(new javax.swing.SpinnerNumberModel(2, -2, 8, 1));
        noteNameProperty.add(octaveSpinner);

        noteProperties.add(noteNameProperty);

        alterationProperty.setLayout(new java.awt.GridLayout());

        alterationLabel.setText("Altération :");
        alterationProperty.add(alterationLabel);

        alterationButtonGroup.add(sharpRadioButton);
        sharpRadioButton.setText("Dièse");
        alterationProperty.add(sharpRadioButton);

        alterationButtonGroup.add(naturalRadioButton);
        naturalRadioButton.setSelected(true);
        naturalRadioButton.setText("Naturel");
        naturalRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naturalRadioButtonActionPerformed(evt);
            }
        });
        alterationProperty.add(naturalRadioButton);

        alterationButtonGroup.add(flatRadioButton);
        flatRadioButton.setText("Bémol");
        flatRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flatRadioButtonActionPerformed(evt);
            }
        });
        alterationProperty.add(flatRadioButton);

        noteProperties.add(alterationProperty);

        waveFormProperty.setLayout(new java.awt.GridLayout(1, 0));

        waveFormLabel.setText("Forme d'onde :");
        waveFormProperty.add(waveFormLabel);
        waveFormProperty.add(waveFormChoice);

        noteProperties.add(waveFormProperty);

        keyProperties.add(noteProperties);

        jSeparator2.setPreferredSize(new java.awt.Dimension(50, 5));
        keyProperties.add(jSeparator2);

        audioClipProperties.setLayout(new javax.swing.BoxLayout(audioClipProperties, javax.swing.BoxLayout.Y_AXIS));

        audioClipFileProperty.setLayout(new java.awt.GridLayout(1, 2));

        audioClipFileLabel.setText("Fichier :");
        audioClipFileProperty.add(audioClipFileLabel);

        audioClipPathLabel.setBackground(new java.awt.Color(255, 255, 255));
        audioClipPathLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        audioClipPathLabel.setText("Aucun fichier");
        audioClipPathLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        audioClipPathLabel.setOpaque(true);
        audioClipFileProperty.add(audioClipPathLabel);

        audioClipSelectButton.setLabel("Choisir un fichier");
        audioClipFileProperty.add(audioClipSelectButton);

        audioClipProperties.add(audioClipFileProperty);

        readSpeedProperty.setLayout(new java.awt.GridLayout(1, 2));

        readSpeedLabel.setText("Pitch : ");
        readSpeedProperty.add(readSpeedLabel);

        readSpeedSpinner.setModel(new javax.swing.SpinnerNumberModel(1.0d, 0.05d, 100.0d, 0.05d));
        readSpeedProperty.add(readSpeedSpinner);

        audioClipProperties.add(readSpeedProperty);

        keyProperties.add(audioClipProperties);

        jScrollPane1.setViewportView(keyProperties);

        splitWindow.setRightComponent(jScrollPane1);

        getContentPane().add(splitWindow, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void flatRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flatRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flatRadioButtonActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void audioClipRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_audioClipRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_audioClipRadioButtonActionPerformed

    private void naturalRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naturalRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_naturalRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public void setVisible() {
        java.awt.EventQueue.invokeLater(() -> {
            this.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup alterationButtonGroup;
    private javax.swing.JLabel alterationLabel;
    private javax.swing.JPanel alterationProperty;
    private javax.swing.JLabel attackLabel;
    private javax.swing.JSlider attackSlider;
    private javax.swing.JPanel attackSliderPanel;
    private javax.swing.JLabel audioClipFileLabel;
    private javax.swing.JPanel audioClipFileProperty;
    private javax.swing.JLabel audioClipPathLabel;
    private javax.swing.JPanel audioClipProperties;
    private javax.swing.JRadioButton audioClipRadioButton;
    private java.awt.Button audioClipSelectButton;
    private javax.swing.JLabel decayLabel;
    private javax.swing.JSlider decaySlider;
    private javax.swing.JPanel decaySliderPanel;
    private javax.swing.JPanel envelopeGraph;
    private javax.swing.JLabel envelopeLabel;
    private javax.swing.JPanel envelopeProperties;
    private javax.swing.JPanel envelopeSliders;
    private javax.swing.JPanel envelopeTitlePanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JRadioButton flatRadioButton;
    private javax.swing.JLabel frequencyLabel;
    private javax.swing.JPanel frequencyProperty;
    private javax.swing.JSpinner frequencySpinner;
    private javax.swing.JPanel generalProperties;
    private javax.swing.JPanel instrumentPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel keyProperties;
    private javax.swing.ButtonGroup keyTypeButtonGroup;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel nameProperty;
    private javax.swing.JRadioButton naturalRadioButton;
    private java.awt.Choice noteNameChoice;
    private javax.swing.JLabel noteNameLabel;
    private javax.swing.JPanel noteNameProperty;
    private javax.swing.JPanel noteProperties;
    private javax.swing.JLabel octaveLabel;
    private javax.swing.JSpinner octaveSpinner;
    private javax.swing.JLabel readSpeedLabel;
    private javax.swing.JPanel readSpeedProperty;
    private javax.swing.JSpinner readSpeedSpinner;
    private javax.swing.JLabel releaseLabel;
    private javax.swing.JSlider releaseSlider;
    private javax.swing.JPanel releaseSliderPanel;
    private javax.swing.JRadioButton sharpRadioButton;
    private javax.swing.JSplitPane splitWindow;
    private javax.swing.JLabel sustainLabel;
    private javax.swing.JSlider sustainSlider;
    private javax.swing.JPanel sustainSliderPanel;
    private javax.swing.JRadioButton synthRadioButton;
    private javax.swing.JLabel tuningLabel;
    private javax.swing.JPanel tuningProperty;
    private javax.swing.JSpinner tuningSpinner;
    private javax.swing.JPanel typeProperty;
    private javax.swing.JLabel volumeLabel;
    private javax.swing.JPanel volumeProperty;
    private javax.swing.JSpinner volumeSpinner;
    private java.awt.Choice waveFormChoice;
    private javax.swing.JLabel waveFormLabel;
    private javax.swing.JPanel waveFormProperty;
    // End of variables declaration//GEN-END:variables
}
